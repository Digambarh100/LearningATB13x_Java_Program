/======================================================== JSON ========================================================/

Question - 01: What is JSON? Explain its purpose.
Answer:
üì¶ What is JSON?
    - JSON stands for JavaScript Object Notation.
    - It is a lightweight data format used to store and exchange data between a client and a server.

üß† Think of it as:
    - A simple and easy-to-read way to send structured data ‚Äî like a message in a shared language both sides understand.

üîß Example:
{
  "name": "Lipi",
  "age": 25,
  "email": "lipi@example.com"
}

This is a JSON object representing a user's info.
üéØ Purpose of JSON:
    ‚úÖ Exchange data between client and server (especially in APIs)
    ‚úÖ Store configuration or structured data
    ‚úÖ Easily parsed and generated by most programming languages

üåç Used in:
    - REST APIs
    - Web and mobile apps
    - Config files (e.g., package.json, settings.json)

------------------------------------------------------------------------------------------------------------------------

Question - 02: Which data types are supported in JSON? List all.
Answer:
-------------------------------------------------------------------------------------------
    Data Type     |           Example              |              Meaning                 |
-------------------------------------------------------------------------------------------
    String        |    "name": "Lipi"              |  Text enclosed in double quotes      |
    Number        |    "age": 25                   |  Numeric value (int or float)        |
    Boolean       |    "active": true              |  True or false value                 |
    Null          |    "data": null                |  Represents empty or no value        |
    Object        |    "user": { "id": 1 }         |  Key‚Äìvalue pairs (like a dictionary) |
    Array         |    "items": [1, 2, 3]          |  Ordered list of values              |
-------------------------------------------------------------------------------------------

üß† JSON = Data in key-value format using these types
    - JSON keeps things simple and language-independent, which is why it‚Äôs widely used in web development and APIs.

------------------------------------------------------------------------------------------------------------------------

Question - 03: What is the correct JSON format? Give an example.
Answer:
‚úÖ What is the Correct JSON Format?
A correct JSON format follows these rules:
    - Data is in key‚Äìvalue pairs
    - Keys are always in double quotes (")
    - Strings use double quotes, not single quotes
    - Data is separated by commas
    - The entire structure is wrapped in curly braces {} (for objects)

üîß Example of a Valid JSON Object:
{
  "name": "Lipi",
  "age": 25,
  "email": "lipi@example.com",
  "isVerified": true,
  "skills": ["Java", "Selenium", "API Testing"],
  "address": {
    "city": "Hyderabad",
    "zip": 500001
  },
  "bio": null
}

------------------------------------------------------------------------------------------------------------------------

Question - 04: What is the difference between a JSON object and a JSON array? Give examples.
Answer:
üß© Difference Between JSON Object and JSON Array
-----------------------------------------------------------------------------------------------------------
    Type         |               Example                         |             Meaning / Structure        |
-----------------------------------------------------------------------------------------------------------
 JSON Object     |  { "name": "Lipi", "age": 25 }                |  Key‚Äìvalue pairs, like a dictionary    |
 JSON Array      |  [ "Java", "Selenium", "API Testing" ]        |  Ordered list of items (no keys)       |
-----------------------------------------------------------------------------------------------------------

üîç Quick Summary:
---------------------------------------------------------------------------------------------
     Feature        |           JSON Object                    |             JSON Array     |
---------------------------------------------------------------------------------------------
    Structure       |   { key: value, ... }                    |   [ value1, value2, ... ]  |
---------------------------------------------------------------------------------------------
      Usage         |   Represent entities                     |   Represent lists          |
                    |   (user, product, etc.)                  |   (skills, items, etc.)    |
---------------------------------------------------------------------------------------------
      Keys          |   Required                               |   Not used (uses index)    |
---------------------------------------------------------------------------------------------
   Common In        |   API responses                          |   Lists of data            |
                    |   (user details)                         |   (multiple users/items)   |
---------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------------------------------

Question - 05: How do we represent null in JSON? Give an example.
Answer:
üü§ How Do We Represent null in JSON?
    - In JSON, null is used to represent an empty or non-existent value.
    - It simply means: ‚Äúno value here‚Äù.

‚úÖ JSON null Example:
{
  "name": "Lipi",
  "email": null
}

------------------------------------------------------------------------------------------------------------------------

Question - 06: Does JSON allow comments? Explain why.
Answer:
‚ùå No, JSON does not allow comments.
- Allowing comments could break parsers and create inconsistencies.

Question - 07:What is the default character encoding for JSON?
Answer:
üî§ What is the Default Character Encoding for JSON?
‚úÖ The default character encoding for JSON is UTF-8.

üí° Why UTF-8?
    - UTF-8 can represent every character in the Unicode standard.
    - It‚Äôs compact, efficient, and widely supported.
    - Makes JSON ideal for transmitting text in any language.

üîç Example:
    - When an API sends JSON data, it‚Äôs usually declared like this:
    - Content-Type: application/json; charset=UTF-8

------------------------------------------------------------------------------------------------------------------------

Question - 08: Convert this data into JSON format:
Name: Pramod
Age: 25
Skills: Java, API
Answer:

{
"Name" : "Pramod",
"Age" : 25,
"Skills" : ["Java","API"]
}

------------------------------------------------------------------------------------------------------------------------